func Insert{{.StructName}}(ctx context.Context, db Queryer, row *{{.StructName}}) error {
  args := pgx.QueryArgs(make([]interface{}, 0, {{len .Columns}}))

  var columns, values []string

{{range .Columns}}  if row.{{.FieldName}}.Status != pgtype.Undefined {
    columns = append(columns, `{{.ColumnName}}`)
    values = append(values, args.Append(&row.{{.FieldName}}))
  }
{{end}}

  sql := `insert into "{{.TableName}}"(` + strings.Join(columns, ", ") + `)
values(` + strings.Join(values, ",") + `)
returning {{ range $i, $column := .PrimaryKeyColumns}}{{if $i}}, {{end}}"{{$column.ColumnName}}"{{end}}
  `

  psName := preparedName("pgxdataInsert{{.StructName}}", sql)

  return prepareQueryRow(ctx, db, psName, sql, args...).Scan({{ range $i, $column := .PrimaryKeyColumns}}{{if $i}}, {{end}}&row.{{$column.FieldName}}{{end}})
}
